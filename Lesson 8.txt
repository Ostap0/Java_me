import java.util.Scanner;

public class Menu {

        public static void main(String[] ars) {
            Cat cat = new Cat();
            Cat cat2 = new Cat();
            Cat dog = new Cat();
            Cat wolf = new Cat();
            Cat lion = new Cat();

            Cat cat1 =  foo(cat);


            Scanner in = new Scanner(System.in);
            for (int i= 1; i <= 3; i++)
                System.out.println( i+ ". Menu Item #" +i);

            System.out.println("0 .Quit");

            boolean quit = false;

            int menuItem;
            do{

                System.out.print("chose menu item:");

                menuItem = in.nextInt();
                switch (menuItem){

                    case  1:
                        System.out.println("look at animals: \n" +
                                ""+ "У вас їх " + Cat.getCount() );

                        break;

                    case 2:
                                                               // хотів зробити за допомогою клонування , але не вийшло(
                        System.out.println("add animals:\n" +
                                "Ви добавили тварину");
                        break;

                    case 3:
                        System.out.println("add input parameters: ");
                        break;

                    case 0:
                        quit = true;
                        break;

                    default:
                        System.out.println("Error");

                }

            } while (!quit);
            System.out.println("bye!");


        }



    private static int count = 0;

    public Menu(){
        new Counter().setCount();

    }

    public static int getCount() {
        return count;

    }

    private static class Counter {

        private void setCount() {
            count = count + 1;
        }

    }


    public static Cat foo(Cat cat1){
        Cat smallcat = null;

        try {
            smallcat = (Cat) cat1.clone();
        }
        catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        return smallcat;
    }


     }




